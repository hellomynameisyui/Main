local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({

   Name = "Pikmin Hub Window",

   LoadingTitle = "waiting... Pikmin Hub is Loading",

   LoadingSubtitle = "by whdwii",

   ConfigurationSaving = {

      Enabled = true,

      FolderName = nil, -- Create a custom folder for your hub/game

      FileName = "Pikmin Hub"

   },

   Discord = {

      Enabled = true,

      Invite = "https://discord.com/invite/ebGN8VdUgM", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD

      RememberJoins = true -- Set this to false to make them join the discord every time they load it up

   },

   KeySystem = true, -- Set this to true to use our key system

   KeySettings = {

      Title = "Pikmin Script",

      Subtitle = "Key System",

      Note = "Pastebin Page Password is Discord",

      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file

      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script

      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from

      Key = {"https://pastebin.com/af8daLyS"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")

   }

})



local Tab = Window:CreateTab("Home", nil)

local Section = Tab:CreateSection("Main")



Rayfield:Notify({

   Title = "your Executed Script!",

   Content = "Thanks Execute",

   Duration = 6.5,

   Image = 4483362458,

   Actions = { -- Notification Buttons

      Ignore = {

         Name = "Okay!",

         Callback = function()

         print("The user is Click the Okay Script")

      end

   },

},

})



local Button = Tab:CreateButton({

   Name = "inf Health",

   Callback = function()

   while wait() do local args = {

    [1] = 99

   }



   game:GetService("ReplicatedStorage"):WaitForChild("Heal"):FireServer(unpack(args))

   end
end,

})
